version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: nessie
      POSTGRES_PASSWORD: nessie
      POSTGRES_DB: nessie_db
    ports:
      - "5432:5432"
    volumes:
      - ./pg-data:/var/lib/postgresql/data
    networks:
      - shared_net
    depends_on:
      - minio
  nessie:
    image: projectnessie/nessie:latest
    container_name: nessie
    depends_on:
      - postgres
    environment:
      AWS_REGION: us-east-1
      NESSIE_VERSION_STORE_TYPE: JDBC
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/nessie_db
      QUARKUS_DATASOURCE_USERNAME: nessie
      QUARKUS_DATASOURCE_PASSWORD: nessie
      QUARKUS_OPENTELEMETRY_ENABLED: false
    ports:
      - "19120:19120"
    networks:
      - shared_net
  trino:
    image: trinodb/trino:latest
    container_name: trino
    ports:
      - "8080:8080"
    environment:
      AWS_REGION: us-east-1
    volumes:
      - ./trino/etc:/etc/trino
      - ./warehouse:/opt/warehouse  # локальное хранилище Iceberg-таблиц
    networks:
      - shared_net
    depends_on:
      - nessie
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web UI
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    networks:
      - shared_net
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5
volumes:
  minio-data:
networks:
  shared_net:
    external: true
    name: lakehouse_net